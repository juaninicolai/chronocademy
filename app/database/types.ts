/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Timestamp = ColumnType<Date, Date | string>;

export interface Skills {
  category: string;
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  skill: string;
  updated_at: Generated<Timestamp>;
}

export interface UserData {
  birthdate: Timestamp;
  created_at: Generated<Timestamp>;
  description: string;
  first_name: string;
  last_name: string;
  origin_country: string;
  timezone: string;
  updated_at: Generated<Timestamp>;
  user_id: Generated<number>;
}

export interface UserLanguages {
  created_at: Generated<Timestamp>;
  language: string;
  level: string;
  updated_at: Generated<Timestamp>;
  user_id: Generated<number>;
}

export interface Users {
  created_at: Generated<Timestamp>;
  email: string;
  id: Generated<number>;
  password: string;
  updated_at: Generated<Timestamp>;
}

export interface UserSkills {
  created_at: Generated<Timestamp>;
  skill_id: Generated<number>;
  type: string;
  updated_at: Generated<Timestamp>;
  user_id: Generated<number>;
}

export interface DB {
  skills: Skills;
  user_data: UserData;
  user_languages: UserLanguages;
  user_skills: UserSkills;
  users: Users;
}
